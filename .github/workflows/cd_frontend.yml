# name: Deploy the backend
# on:
#   push: 
#     branches: [main]

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout the code
#         uses: actions/checkout@v2

#       - name: Docker Login
#         uses: docker/login-action@v2
#         with: 
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_TOKEN }}

#       - name: Build and push Docker image
#         uses: docker/build-push-action@v4
#         with:
#           context: .
#           file: ./docker/Dockerfile.frontend
#           build-args:
#             - DATABASE_URL=${{secrets.DATABASE_URL}}
#               CLIENT_ID=${{secrets.CLIENT_ID}}
#               CLIENT_SECRET=${{secrets.CLIENT_SECRET}}
#               NEXTAUTH_SECRET=${{secrets.NEXTAUTH_SECRET}}
#               NEXT_PUBLIC_BACKEND_URL=${{secrets.NEXT_PUBLIC_BACKEND_URL}}
#               NEXT_PUBLIC_CLOUDFLARE_URL=${{secrets.NEXT_PUBLIC_CLOUDFLARE_URL}}
#               NEXT_PUBLIC_PRODUCTION_URL=${{secrets.NEXT_PUBLIC_PRODUCTION_URL}}

#           push: true
#           tags: |
#             pratham59/generate-ai-frontend:${{ github.sha }}
#             pratham59/generate-ai-frontend:latest

#       - name: Deploy to VM
#         run: 
#           echo "${{secrets.SSH_PRIVATE_KEY}}" & ~/ssh_key 
#           mkdir -p home/runner/.ssh
#           ls /home/runner/.ssh
#           chmod 700 /home/runner/ssh_key
#           ssh -o StrictHostKeyChecking=no -i ~/ssh_key root@15.206.205.62 -t "docker stop Generate-AI-frontend && docker run -e DATABASE_URL={{secrets.DATABASE_URL}} --name Generate-AI-frontend -d -p 8080:8080 pratham59/generate-ai-backend:latest"